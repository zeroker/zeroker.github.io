<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Q同學&#39;s world</title>
  
  <subtitle>千里之行，始于足下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-24T16:35:51.005Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Q-同學</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全排列</title>
    <link href="http://yoursite.com/2019/06/25/%E5%85%A8%E6%8E%92%E5%88%97/"/>
    <id>http://yoursite.com/2019/06/25/全排列/</id>
    <published>2019-06-24T16:28:25.000Z</published>
    <updated>2019-06-24T16:35:51.005Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//全排列 </span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> k,<span class="keyword">int</span> m)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(k == m)</div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=m; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=k; i&lt;=m; i++)</div><div class="line">&#123;</div><div class="line">swap(a[k],a[i]);</div><div class="line">fun(a,k+<span class="number">1</span>,m);</div><div class="line">swap(a[k],a[i]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n; </div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">&#125;</div><div class="line">fun(a,<span class="number">0</span>,n<span class="number">-1</span>);</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>dp</title>
    <link href="http://yoursite.com/2019/06/25/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2019/06/25/动态规划/</id>
    <published>2019-06-24T16:21:13.000Z</published>
    <updated>2019-06-24T16:33:23.292Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>最大上升 子序列 </div><div class="line"><span class="comment">/*给出 [4,2,4,5,3,7]，LIS 是 [2,4,5,7]，返回 4</span></div><div class="line">*/</div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> b[n];                    <span class="comment">//截至到i 最大的上升子序列 的个数 </span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">b[i] = <span class="number">1</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> max = <span class="number">-1</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++)                        <span class="comment">//找出前面比  此时的x 小的，并且 连续数最 大的   ~！！！ </span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(a[j] &lt; a[i] &amp;&amp; b[j] &gt; max)</div><div class="line">&#123;</div><div class="line">max = b[j];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(max != <span class="number">-1</span>)</div><div class="line">b[i] = max +<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> maxx = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">maxx = max(b[i],maxx);</div><div class="line"><span class="keyword">return</span> maxx;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> n = <span class="number">5</span>;</div><div class="line"><span class="comment">//int a[] =&#123;4,2,4,5,3,7&#125;;                                                                                                                                   </span></div><div class="line"><span class="comment">//5,4,1,2,3</span></div><div class="line"><span class="keyword">int</span> a[] =&#123;<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</div><div class="line"><span class="built_in">cout</span>&lt;&lt;fun(a,n)&lt;&lt;<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="number">2.</span>背包问题  </div><div class="line"><span class="comment">//     01背包问题  </span></div><div class="line"><span class="comment">// f[i][j]代表了 前i个物品的时候 容量为j的时候的最大的价值量，其中j必须是从v ...0的，因为每一个物品要选一次！！！ </span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0 </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">int</span> m,n;                 <span class="comment">//m:背包的容量 n:物品的个数 </span></div><div class="line"><span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n; </div><div class="line"><span class="keyword">int</span> w[n+<span class="number">10</span>];   <span class="comment">//每个物品的重量 </span></div><div class="line"><span class="keyword">int</span> c[n+<span class="number">10</span>];<span class="comment">//每个物品的价值 </span></div><div class="line"><span class="keyword">int</span> f[m+<span class="number">10</span>];             <span class="comment">//f[k]代表 k个物品的时候，能装的最大的价值 </span></div><div class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;w[i]&gt;&gt;c[i];</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v = m; v&gt;=w[i]; v--)</div><div class="line">&#123;</div><div class="line">f[v] = max(f[v],f[v-w[i]] + c[i]);</div><div class="line">&#125;</div><div class="line">&#125; </div><div class="line"><span class="built_in">cout</span>&lt;&lt;f[m]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="comment">//完全背包问题</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> m,n;                 <span class="comment">//m:背包的容量 n:物品的个数 </span></div><div class="line"><span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n; </div><div class="line"><span class="keyword">int</span> w[n+<span class="number">10</span>];   <span class="comment">//每个物品的重量 </span></div><div class="line"><span class="keyword">int</span> c[n+<span class="number">10</span>];<span class="comment">//每个物品的价值 </span></div><div class="line"><span class="keyword">int</span> f[m+<span class="number">10</span>];             <span class="comment">//f[k]代表 k个物品的时候，能装的最大的价值 </span></div><div class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;w[i]&gt;&gt;c[i];</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v = w[i]; v&lt;=m; v++)</div><div class="line">&#123;</div><div class="line">f[v] = max(f[v],f[v-w[i]] + c[i]);</div><div class="line">&#125;</div><div class="line">&#125; </div><div class="line"><span class="built_in">cout</span>&lt;&lt;f[m]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div></pre></td><td class="code"><pre><div class="line"><span class="number">3.</span>KMP</div><div class="line"></div><div class="line"><span class="comment">/*KMP算法 </span></div><div class="line">查询字符串a中 是否包含 字符串b    </div><div class="line">ababcabcacbab</div><div class="line">abcac</div><div class="line">*/</div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="comment">//笨办法得到next数组 </span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">int</span> next[],<span class="built_in">string</span> s)</span></span></div><div class="line">&#123;</div><div class="line"><span class="built_in">memset</span>(next,<span class="number">0</span>,<span class="keyword">sizeof</span>(next));</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.size(); i++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="built_in">string</span> str = s.substr(<span class="number">0</span>,i+<span class="number">1</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;str.size()<span class="number">-1</span>; j++)</div><div class="line">&#123;</div><div class="line"><span class="built_in">string</span> str1 = str.substr(<span class="number">0</span>,j+<span class="number">1</span>);</div><div class="line"><span class="built_in">string</span> str2 = str.substr(str.size()-j<span class="number">-1</span>,str.size());</div><div class="line"><span class="keyword">if</span>(str1==str2)</div><div class="line">&#123;</div><div class="line">ans = j+<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">next[i] = ans;</div><div class="line">&#125;</div><div class="line">&#125; </div><div class="line"> <span class="comment">//a 是主字符串   b是小字符串 </span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b,<span class="keyword">int</span> next[])</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n = a.size() , i = <span class="number">0</span>;           <span class="comment">//主字符串的长度，主字符串的下标 </span></div><div class="line"><span class="keyword">int</span> m = b.size() , j = <span class="number">0</span>;<span class="comment">//小字符串的长度，已经匹配的个数 </span></div><div class="line"></div><div class="line"><span class="keyword">while</span>(i &lt; n) </div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(j==<span class="number">0</span>)                       <span class="comment">//如果小字符串中的第一个元素没有找到与大字符串中有匹配的，那就寻找===  </span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(a[i] == b[j])</div><div class="line">&#123;</div><div class="line">j++;                                      <span class="comment">//已经匹配的个数 </span></div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">i++; <span class="comment">//主字符串的 下标 </span></div><div class="line">&#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;                        <span class="comment">//已经有匹配的了 </span></div><div class="line"><span class="keyword">if</span>(a[i+<span class="number">1</span>] != b[j])    <span class="comment">//如果不下一个字符不相等，那就移动小字符串，这个过程操作起来就是更改小字符串的下标。 </span></div><div class="line">&#123;</div><div class="line">j = next[j<span class="number">-1</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(a[i+<span class="number">1</span>] == b[j])  <span class="comment">//如果相等那就比较下一个字符 </span></div><div class="line">&#123;</div><div class="line">i++;</div><div class="line">j++;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(j == m)                    <span class="comment">//如果小字符串全比较完了，那就是全匹配了，完成！ 否则大字符串中不存在 小字符串！ </span></div><div class="line"><span class="keyword">return</span> i;                <span class="comment">//这里返回小字符串在大字符串中最后匹配成功的字符的下标 </span></div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> next[<span class="number">1000</span>];</div><div class="line"><span class="built_in">string</span> a = <span class="string">"BBC ABCDAB ABCDABCDABDE"</span>;</div><div class="line"></div><div class="line"><span class="built_in">string</span> b = <span class="string">"ABCDABD"</span>;</div><div class="line"></div><div class="line">getNext(next,b);</div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"kmp:"</span>&lt;&lt;kmp(a,b,next)&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//求next数组</span></div><div class="line"><span class="comment">/*</span></div><div class="line">ababc</div><div class="line"></div><div class="line">*/</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(<span class="built_in">string</span> s,<span class="keyword">int</span> next[])</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> n = s.size();</div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//for(int i=1; i&lt;n; i++)</span></div><div class="line"><span class="comment">//&#123;</span></div><div class="line"><span class="comment">//if(s[i] == s[next[i-1]])</span></div><div class="line"><span class="comment">//next[i] = next[i-1] + 1;</span></div><div class="line"><span class="comment">//&#125;</span></div><div class="line"></div><div class="line"><span class="built_in">memset</span>(next,<span class="number">0</span>,<span class="keyword">sizeof</span>(next));</div><div class="line"><span class="keyword">int</span> k = <span class="number">0</span>;                      <span class="comment">//k代表 最大前后缀长度 </span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>,k = <span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">while</span>(k&gt;<span class="number">0</span> &amp;&amp; s[k] != s[i])</div><div class="line">&#123;</div><div class="line">k = next[k<span class="number">-1</span>];</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="keyword">if</span>(s[i] == s[k])</div><div class="line">&#123;</div><div class="line">k++;</div><div class="line">&#125;</div><div class="line">next[i] = k;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> next[<span class="number">100</span>];</div><div class="line"><span class="built_in">memset</span>(next,<span class="number">0</span>,<span class="keyword">sizeof</span>(next));</div><div class="line"><span class="comment">//string s = "ABCDABD";</span></div><div class="line"><span class="comment">//string s = "ababc";</span></div><div class="line"><span class="comment">//string s = "abcdabcefabcd";</span></div><div class="line"><span class="built_in">string</span> s = <span class="string">"abadabab"</span>;</div><div class="line"><span class="keyword">int</span> n = s.size();</div><div class="line">getnext(s,next);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="built_in">cout</span>&lt;&lt;next[i]&lt;&lt;<span class="string">" "</span>; </div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="http://yoursite.com/2019/06/25/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2019/06/25/排序算法/</id>
    <published>2019-06-24T16:13:54.000Z</published>
    <updated>2019-06-24T16:32:14.975Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//排序算法有 冒泡  / 快排/ 选择/堆排序/  归并 / 桶排序 /</span></div><div class="line"></div><div class="line"><span class="comment">//1.冒泡排序</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n-i<span class="number">-1</span>; j++)          <span class="comment">//</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(a[j] &gt; a[j+<span class="number">1</span>])</div><div class="line">swap(a[j],a[j+<span class="number">1</span>]);</div><div class="line">&#125; </div><div class="line">&#125; </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">sort(a,n);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//1.1 快速排序</span></div><div class="line"> <span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">pattern</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> i = l,j = r;</div><div class="line"><span class="keyword">while</span>(i&lt;j)</div><div class="line">&#123;</div><div class="line"><span class="keyword">while</span>(i&lt;j &amp;&amp; a[i]&lt;=a[j])</div><div class="line">j--;</div><div class="line"><span class="keyword">if</span>(i&lt;j)</div><div class="line">swap(a[i],a[j]);</div><div class="line"><span class="keyword">while</span>(i&lt;j &amp;&amp; a[i]&lt;=a[j])</div><div class="line">i++;</div><div class="line"><span class="keyword">if</span>(i&lt;j)</div><div class="line">swap(a[i],a[j]);</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> i;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(i&lt;j)</div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> mid = pattern(i,j);</div><div class="line">sort(i,mid<span class="number">-1</span>);</div><div class="line">sort(mid+<span class="number">1</span>,j);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">sort(<span class="number">0</span>,n<span class="number">-1</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//2.选择排序</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> num;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)</div><div class="line">&#123;</div><div class="line">num = i;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;n; j++)          </div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(a[j] &gt; a[num])</div><div class="line">num = j;</div><div class="line">&#125; </div><div class="line"><span class="keyword">if</span>(num != i)</div><div class="line">swap(a[num],a[i]);</div><div class="line">&#125; </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">sort(a,n);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//3. 归并排序</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> r[<span class="number">1000</span>],r1[<span class="number">1000</span>];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> m,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> i=s,j=m+<span class="number">1</span>,k=s;   </div><div class="line"></div><div class="line"><span class="keyword">while</span>(i&lt;=m &amp;&amp; j&lt;=t)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(r[i]&lt;=r[j])       </div><div class="line">r1[k++] = r[i++];</div><div class="line"><span class="keyword">else</span></div><div class="line">r1[k++] = r[j++];</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">while</span>(i&lt;=m)</div><div class="line">r1[k++] = r[i++];</div><div class="line"><span class="keyword">while</span>(j&lt;=t)</div><div class="line">r1[k++] = r[j++];</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> z=s; z&lt;=t; z++)</div><div class="line">  r[z] = r1[z];</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(s&gt;=t)</div><div class="line"><span class="keyword">return</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> m = (s+t)/<span class="number">2</span>;</div><div class="line">sort(s,m);</div><div class="line">sort(m+<span class="number">1</span>,t);</div><div class="line">merge(s,m,t);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;r[i];</div><div class="line">&#125;</div><div class="line">sort(<span class="number">0</span>,n<span class="number">-1</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;r1[i]&lt;&lt;<span class="string">" "</span>; </div><div class="line">      </div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//4.堆排序</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> a[<span class="number">100000</span>];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sift</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> i=s,j=<span class="number">2</span>*s;</div><div class="line"><span class="keyword">while</span>(j&lt;=t)</div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(a[j+<span class="number">1</span>] &gt; a[j] &amp;&amp; j&lt;t)</div><div class="line">j++;</div><div class="line"><span class="keyword">if</span>(a[i] &gt; a[j])</div><div class="line"><span class="keyword">break</span>;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">swap(a[i],a[j]);</div><div class="line">i = j;</div><div class="line">j = <span class="number">2</span>*i;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n/<span class="number">2</span>; i&gt;=<span class="number">1</span>; i--)  </div><div class="line">&#123;</div><div class="line">sift(i,n);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</div><div class="line">&#123;</div><div class="line">swap(a[<span class="number">1</span>],a[n-i+<span class="number">1</span>]);</div><div class="line">sift(<span class="number">1</span>,n-i); </div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</div><div class="line">&#123;</div><div class="line">a[i] = n-i;</div><div class="line">&#125;</div><div class="line">sort(n);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//基数排序</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> head;</div><div class="line"><span class="keyword">struct</span> Node</div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> key;</div><div class="line"><span class="keyword">int</span> next;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">struct</span> QueueNode</div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> front,rear;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">distribute</span><span class="params">(Node r[],<span class="keyword">int</span> n,QueueNode q[],<span class="keyword">int</span> m)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> i = <span class="number">0</span>;                     <span class="comment">//默认为0   最后的next为 -1 </span></div><div class="line"><span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> key = r[i].key;</div><div class="line"><span class="keyword">if</span>(q[key].front==<span class="number">-1</span>)</div><div class="line">&#123;</div><div class="line">q[key].front = i;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">r[q[key].rear].next = i;</div><div class="line">&#125; </div><div class="line">q[key].rear = i;</div><div class="line">i = r[i].next;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span>(i == <span class="number">-1</span>)</div><div class="line"><span class="keyword">break</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">collection</span><span class="params">(Node r[],<span class="keyword">int</span> n,QueueNode q[],<span class="keyword">int</span> m)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span>(q[k].front==<span class="number">-1</span>)</div><div class="line">k++;</div><div class="line"><span class="keyword">int</span> first = q[k].front;</div><div class="line"><span class="keyword">int</span> last = q[k].rear;</div><div class="line">head = first;</div><div class="line"></div><div class="line"><span class="keyword">while</span>(k&lt;m)</div><div class="line">&#123;</div><div class="line">k++;</div><div class="line"><span class="keyword">if</span>(q[k].front!=<span class="number">-1</span>)</div><div class="line">&#123;</div><div class="line">r[last].next = q[k].front;</div><div class="line">last = q[k].rear;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">r[last].next = <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">bucketSort</span><span class="params">(Node r[],<span class="keyword">int</span> n,QueueNode q[],<span class="keyword">int</span> m)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">r[i].next = i+<span class="number">1</span>;</div><div class="line">r[n<span class="number">-1</span>].next = <span class="number">-1</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</div><div class="line">&#123;</div><div class="line">q[i].front = q[i].rear = <span class="number">-1</span>;</div><div class="line">&#125;  </div><div class="line"></div><div class="line"></div><div class="line">distribute(r,n,q,m);</div><div class="line">collection(r,n,q,m);</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">Node r[<span class="number">1000</span>];</div><div class="line">QueueNode q[<span class="number">1000</span>];</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</div><div class="line">r[i].key = n-i;</div><div class="line"></div><div class="line">bucketSort(r,n,q,<span class="number">100</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">while</span>(head!=<span class="number">-1</span>)</div><div class="line">&#123;</div><div class="line"><span class="built_in">cout</span>&lt;&lt;r[head].key&lt;&lt;<span class="string">" "</span>;</div><div class="line">head = r[head].next;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//插入排序</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++)</div><div class="line">&#123;</div><div class="line">a[<span class="number">0</span>] = a[i];</div><div class="line"><span class="keyword">int</span> j;</div><div class="line"><span class="keyword">for</span>(j=i<span class="number">-1</span>; a[j] &gt; a[<span class="number">0</span>]; j--)</div><div class="line">&#123;</div><div class="line">a[j+<span class="number">1</span>] = a[j];</div><div class="line">&#125;</div><div class="line">a[j+<span class="number">1</span>] = a[<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</div><div class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">sort(a,n);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">//希尔排序</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0 </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d=n/<span class="number">2</span>; d&gt;=<span class="number">1</span>; d/=<span class="number">2</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=d+<span class="number">1</span>; i&lt;=n; i++)</div><div class="line">&#123;</div><div class="line">a[<span class="number">0</span>] = a[i];</div><div class="line"><span class="keyword">int</span> j;</div><div class="line"><span class="keyword">for</span>(j=i-d; j&gt;<span class="number">0</span>&amp;&amp;a[<span class="number">0</span>]&lt;a[j]; j-=d)</div><div class="line">&#123;</div><div class="line">a[j+d] = a[j];</div><div class="line">&#125;</div><div class="line">a[j+d] = a[<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="built_in">cin</span>&gt;&gt;n;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</div><div class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">sort(a,n);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</div><div class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Http状态码</title>
    <link href="http://yoursite.com/2019/06/24/Http%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    <id>http://yoursite.com/2019/06/24/Http状态码/</id>
    <published>2019-06-24T15:41:23.000Z</published>
    <updated>2019-07-04T08:53:18.187Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.runoob.com/http/http-status-codes.html" target="_blank" rel="external">Http学习</a><br>1.信息代码：1xx，<br>2.成功代码：2xx，<br>3.重定向：3xx，<br>4.客户端错误：4xx，<br>5.服务器错误：5xx</p><p>=============================================================================</p><p>HTTP: Status 1xx  (临时响应)<br>表示临时响应并需要请求者继续执行操作的状态代码。<br>详细代码及说明:</p><p>HTTP: Status 100 (继续)<br>-&gt;请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。<br>HTTP: Status 101 (切换协议)<br>-&gt;请求者已要求服务器切换协议，服务器已确认并准备切换。</p><hr><p>HTTP Status 2xx  (成功)<br>表示成功处理了请求的状态代码;<br>详细代码及说明:</p><p>HTTP Status 200 (成功)<br>-&gt; 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。<br>HTTP Status 201 (已创建)<br>-&gt; 请求成功并且服务器创建了新的资源。<br>HTTP Status 202 (已接受)<br>-&gt; 服务器已接受请求，但尚未处理。<br>HTTP Status 203 (非授权信息)<br>-&gt; 服务器已成功处理了请求，但返回的信息可能来自另一来源。<br>HTTP Status 204 (无内容)<br>-&gt; 服务器成功处理了请求，但没有返回任何内容。<br>HTTP Status 205 (重置内容)<br>-&gt; 服务器成功处理了请求，但没有返回任何内容。<br>HTTP Status 206 (部分内容)<br>-&gt; 服务器成功处理了部分 GET 请求。</p><hr><p>HTTP Status 3xx （重定向）<br>常见的代码</p><p>300   （多种选择）  针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。<br>301   （永久移动）  请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。<br>302   （临时移动）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。<br>303   （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。<br>304   （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。<br>305   （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。<br>307   （临时重定向）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</p><hr><p>HTTP Status 4xx (请求错误)<br>-&gt;这些状态代码表示请求可能出错，妨碍了服务器的处理。</p><p>详细代码说明:<br>HTTP Status 400 （错误请求）<br>-&gt;服务器不理解请求的语法。<br>HTTP Status 401 （未授权）<br>-&gt;请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。<br>HTTP Status 403 （禁止）<br>-&gt; 服务器拒绝请求。<br>HTTP Status 404 （未找到）<br>-&gt;服务器找不到请求的网页。<br>HTTP Status 405 （方法禁用）<br>-&gt;禁用请求中指定的方法。<br>HTTP Status 406 （不接受）<br>-&gt;无法使用请求的内容特性响应请求的网页。<br>HTTP Status 407 （需要代理授权）<br>-&gt;此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。<br>HTTP Status 408 （请求超时）<br>-&gt;服务器等候请求时发生超时。<br>HTTP Status 409 （冲突）<br>-&gt;服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。<br>HTTP Status 410 （已删除）<br>-&gt; 如果请求的资源已永久删除，服务器就会返回此响应。<br>HTTP Status 411 （需要有效长度）<br>-&gt;服务器不接受不含有效内容长度标头字段的请求。<br>HTTP Status 412 （未满足前提条件）<br>-&gt;服务器未满足请求者在请求中设置的其中一个前提条件。<br>HTTP Status 413 （请求实体过大）<br>-&gt;服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。<br>HTTP Status 414 （请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。<br>HTTP Status 415 （不支持的媒体类型）<br>-&gt;请求的格式不受请求页面的支持。<br>HTTP Status 416 （请求范围不符合要求）<br>-&gt;如果页面无法提供请求的范围，则服务器会返回此状态代码。<br>HTTP Status 417 （未满足期望值）<br>-&gt;服务器未满足”期望”请求标头字段的要求。</p><hr><p>HTTP Status 4xx (请求错误)<br>-&gt;这些状态代码表示请求可能出错，妨碍了服务器的处理。</p><p>详细代码说明:<br>HTTP Status 400 （错误请求）<br>-&gt;服务器不理解请求的语法。<br>HTTP Status 401 （未授权）<br>-&gt;请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。<br>HTTP Status 403 （禁止）<br>-&gt; 服务器拒绝请求。<br>HTTP Status 404 （未找到）<br>-&gt;服务器找不到请求的网页。<br>HTTP Status 405 （方法禁用）<br>-&gt;禁用请求中指定的方法。<br>HTTP Status 406 （不接受）<br>-&gt;无法使用请求的内容特性响应请求的网页。<br>HTTP Status 407 （需要代理授权）<br>-&gt;此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。<br>HTTP Status 408 （请求超时）<br>-&gt;服务器等候请求时发生超时。<br>HTTP Status 409 （冲突）<br>-&gt;服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。<br>HTTP Status 410 （已删除）<br>-&gt; 如果请求的资源已永久删除，服务器就会返回此响应。<br>HTTP Status 411 （需要有效长度）<br>-&gt;服务器不接受不含有效内容长度标头字段的请求。<br>HTTP Status 412 （未满足前提条件）<br>-&gt;服务器未满足请求者在请求中设置的其中一个前提条件。<br>HTTP Status 413 （请求实体过大）<br>-&gt;服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。<br>HTTP Status 414 （请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。<br>HTTP Status 415 （不支持的媒体类型）<br>-&gt;请求的格式不受请求页面的支持。<br>HTTP Status 416 （请求范围不符合要求）<br>-&gt;如果页面无法提供请求的范围，则服务器会返回此状态代码。<br>HTTP Status 417 （未满足期望值）<br>-&gt;服务器未满足”期望”请求标头字段的要求。</p><hr><p>HTTP Status 5xx （服务器错误）<br>-&gt;这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p><p>代码详细及说明:<br>HTTP Status 500 （服务器内部错误）<br>-&gt;服务器遇到错误，无法完成请求。<br>HTTP Status 501 （尚未实施）<br>-&gt;服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。<br>HTTP Status 502 （错误网关）<br>-&gt;服务器作为网关或代理，从上游服务器收到无效响应。<br>HTTP Status 503 （服务不可用）<br>-&gt; 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。<br>HTTP Status 504 （网关超时）<br>-&gt;服务器作为网关或代理，但是没有及时从上游服务器收到请求。<br>HTTP Status 505 （HTTP 版本不受支持）<br>-&gt; 服务器不支持请求中所用的 HTTP 协议版本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.runoob.com/http/http-status-codes.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Http学习&lt;/a&gt;&lt;br&gt;1.信息代码：1xx，&lt;br&gt;2.成功代码：2xx，&lt;br&gt;3
      
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>网络端口号</title>
    <link href="http://yoursite.com/2019/06/24/%E7%AB%AF%E5%8F%A3%E5%8F%B7/"/>
    <id>http://yoursite.com/2019/06/24/端口号/</id>
    <published>2019-06-24T07:01:10.000Z</published>
    <updated>2019-06-24T15:54:36.419Z</updated>
    
    <content type="html"><![CDATA[<p>21/tcp FTP 文件传输协议<br>22/tcp SSH 安全登录、文件传送(SCP)和端口重定向<br>23/tcp Telnet 不安全的文本传送<br>25/tcp SMTP Simple Mail Transfer Protocol (E-mail)<br>69/udp TFTP Trivial File Transfer Protocol<br>79/tcp finger Finger<br>80/tcp HTTP 超文本传送协议 (WWW)<br>88/tcp Kerberos Authenticating agent<br>110/tcp POP3 Post Office Protocol (E-mail)<br>113/tcp ident old identification server system<br>119/tcp NNTP used for usenet newsgroups<br>220/tcp IMAP3<br>443/tcp HTTPS used for securely transferring web pages<br>端口：0<br>服务：Reserved<br>说明：通常用于分析操作系统。这一方法能够工作是因为在一些系统中“0”是无效端口，当你试图使用通常的闭合端口连接它时将产生不同的结果。一种典型的扫描，使用IP地址为0.0.0.0，设置ACK位并在以太网层广播。</p><p>端口：1<br>服务：tcpmux<br>说明：这显示有人在寻找SGI Irix机器。Irix是实现tcpmux的主要提供者，默认情况下tcpmux在这种系统中被打开。Irix机器在发布是含有几个默认的无密码的帐户，如：IP、GUEST UUCP、NUUCP、DEMOS 、TUTOR、DIAG、OUTOFBOX等。许多管理员在安装后忘记删除这些帐户。因此HACKER在INTERNET上搜索tcpmux并利用这些帐户。</p><p>端口：7<br>服务：Echo<br>说明：能看到许多人搜索Fraggle放大器时，发送到X.X.X.0和X.X.X.255的信息。</p><p>端口：19<br>服务：Character Generator<br>说明：这是一种仅仅发送字符的服务。UDP版本将会在收到UDP包后回应含有垃圾字符的包。TCP连接时会发送含有垃圾字符的数据流直到连接关闭。HACKER利用IP欺骗可以发动DoS攻击。伪造两个chargen服务器之间的UDP包。同样Fraggle DoS攻击向目标地址的这个端口广播一个带有伪造受害者IP的数据包，受害者为了回应这些数据而过载。</p><p>端口：21<br>服务：FTP<br>说明：FTP服务器所开放的端口，用于上传、下载。最常见的攻击者用于寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口。</p><p>端口：22<br>服务：Ssh<br>说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。</p><p>端口：23<br>服务：Telnet<br>说明：远程登录，入侵者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，入侵者也会找到密码。木马Tiny Telnet Server就开放这个端口。</p><p>端口：25<br>服务：SMTP<br>说明：SMTP服务器所开放的端口，用于发送邮件。入侵者寻找SMTP服务器是为了传递他们的SPAM。入侵者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口。</p><p>端口：31<br>服务：MSG Authentication<br>说明：木马Master Paradise、Hackers Paradise开放此端口。</p><p>端口：42<br>服务：WINS Replication<br>说明：WINS复制</p><p>端口：53<br>服务：Domain Name Server（DNS）<br>说明：DNS服务器所开放的端口，入侵者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。<br>端口：67<br>服务：Bootstrap Protocol Server<br>说明：通过DSL和Cable modem的防火墙常会看见大量发送到广播地址255.255.255.255的数据。这些机器在向DHCP服务器请求一个地址。HACKER常进入它们，分配一个地址把自己作为局部路由器而发起大量中间人（man-in-middle）攻击。客户端向68端口广播请求配置，服务器向67端口广播回应请求。这种回应使用广播是因为客户端还不知道可以发送的IP地址。</p><p>端口：69<br>服务：Trival File Transfer<br>说明：许多服务器与bootp一起提供这项服务，便于从系统下载启动代码。但是它们常常由于错误配置而使入侵者能从系统中窃取任何 文件。它们也可用于系统写入文件。</p><p>端口：79<br>服务：Finger Server<br>说明：入侵者用于获得用户信息，查询操作系统，探测已知的缓冲区溢出错误，回应从自己机器到其他机器Finger扫描。</p><p>端口：80<br>服务：HTTP<br>说明：用于网页浏览。木马Executor开放此端口。</p><p>端口：99<br>服务：gram Relay<br>说明：后门程序ncx99开放此端口。</p><p>端口：102<br>服务：Message transfer agent(MTA)-X.400 over TCP/IP<br>说明：消息传输代理。</p><p>端口：109<br>服务：Post Office Protocol -Version3<br>说明：POP3服务器开放此端口，用于接收邮件，客户端访问服务器端的邮件服务。POP3服务有许多公认的弱点。关于用户名和密码交 换缓冲区溢出的弱点至少有20个，这意味着入侵者可以在真正登陆前进入系统。成功登陆后还有其他缓冲区溢出错误。</p><p>端口：110<br>服务：SUN公司的RPC服务所有端口<br>说明：常见RPC服务有rpc.mountd、NFS、rpc.statd、rpc.csmd、rpc.ttybd、amd等</p><p>端口：113<br>服务：Authentication Service<br>说明：这是一个许多计算机上运行的协议，用于鉴别TCP连接的用户。使用标准的这种服务可以获得许多计算机的信息。但是它可作为许多服务的记录器，尤其是FTP、POP、IMAP、SMTP和IRC等服务。通常如果有许多客户通过防火墙访问这些服务，将会看到许多这个端口的连接请求。记住，如果阻断这个端口客户端会感觉到在防火墙另一边与E-MAIL服务器的缓慢连接。许多防火墙支持TCP连接的阻断过程中发回RST。这将会停止缓慢的连接。<br>端口：119<br>服务：Network News Transfer Protocol<br>说明：NEWS新闻组传输协议，承载USENET通信。这个端口的连接通常是人们在寻找USENET服务器。多数ISP限制，只有他们的客户才能访问他们的新闻组服务器。打开新闻组服务器将允许发/读任何人的帖子，访问被限制的新闻组服务器，匿名发帖或发送SPAM。</p><p>端口：135<br>服务：Location Service<br>说明：Microsoft在这个端口运行DCE RPC end-point mapper为它的DCOM服务。这与UNIX 111端口的功能很相似。使用DCOM和RPC的服务利用计算机上的end-point mapper注册它们的位置。远端客户连接到计算机时，它们查找end-point mapper找到服务的位置。HACKER扫描计算机的这个端口是为了找到这个计算机上运行Exchange Server吗？什么版本？还有些DOS攻击直接针对这个端口。</p><p>端口：137、138、139<br>服务：NETBIOS Name Service<br>说明：其中137、138是UDP端口，当通过网上邻居传输文件时用这个端口。而139端口：通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于windows文件和打印机共享和SAMBA。还有WINS Regisrtation也用它。</p><p>端口：143<br>服务：Interim Mail Access Protocol v2<br>说明：和POP3的安全问题一样，许多IMAP服务器存在有缓冲区溢出漏洞。记住：一种LINUX蠕虫（admv0rm）会通过这个端口繁殖，因此许多这个端口的扫描来自不知情的已经被感染的用户。当REDHAT在他们的LINUX发布版本中默认允许IMAP后，这些漏洞变的很流行。这一端口还被用于IMAP2，但并不流行。</p><p>端口：161<br>服务：SNMP<br>说明：SNMP允许远程管理设备。所有配置和运行信息的储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。</p><p>端口：177<br>服务：X Display Manager Control Protocol<br>说明：许多入侵者通过它访问X-windows操作台，它同时需要打开6000端口。</p><p>端口：389<br>服务：LDAP、ILS<br>说明：轻型目录访问协议和NetMeeting Internet Locator Server共用这一端口。</p><p>端口：443<br>服务：Https<br>说明：网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。</p><p>端口：456<br>服务：[NULL]<br>说明：木马HACKERS PARADISE开放此端口。</p><p>端口：513<br>服务：Login,remote login<br>说明：是从使用cable modem或DSL登陆到子网中的UNIX计算机发出的广播。这些人为入侵者进入他们的系统提供了信息。</p><p>端口：544<br>服务：[NULL]<br>说明：kerberos kshell</p><p>端口：548<br>服务：Macintosh,File Services(AFP/IP)<br>说明：Macintosh,文件服务。</p><p>端口：553<br>服务：CORBA IIOP （UDP）<br>说明：使用cable modem、DSL或VLAN将会看到这个端口的广播。CORBA是一种面向对象的RPC系统。入侵者可以利用这些信息进入系统。</p><p>端口：555<br>服务：DSF<br>说明：木马PhAse1.0、Stealth Spy、IniKiller开放此端口。<br>端口：568<br>服务：Membership DPA<br>说明：成员资格 DPA。</p><p>端口：569<br>服务：Membership MSN<br>说明：成员资格 MSN。</p><p>端口：635<br>服务：mountd<br>说明：Linux的mountd Bug。这是扫描的一个流行BUG。大多数对这个端口的扫描是基于UDP的，但是基于TCP的mountd有所增加（mountd同时运行于两个端口）。记住mountd可运行于任何端口（到底是哪个端口，需要在端口111做portmap查询），只是Linux默认端口是635，就像NFS通常运行于2049端口。</p><p>端口：636<br>服务：LDAP<br>说明：SSL（Secure Sockets layer）</p><p>端口：666<br>服务：Doom Id Software<br>说明：木马Attack FTP、Satanz Backdoor开放此端口</p><p>端口：993<br>服务：IMAP<br>说明：SSL（Secure Sockets layer）</p><p>端口：1001、1011<br>服务：[NULL]<br>说明：木马Silencer、WebEx开放1001端口。木马Doly Trojan开放1011端口。</p><p>端口：1024<br>服务：Reserved<br>说明：它是动态端口的开始，许多程序并不在乎用哪个端口连接网络，它们请求系统为它们分配下一个闲置端口。基于这一点分配从端口1024开始。这就是说第一个向系统发出请求的会分配到1024端口。你可以重启机器，打开Telnet，再打开一个窗口运行natstat -a 将会看到Telnet被分配1024端口。还有SQL session也用此端口和5000端口。</p><p>端口：1025、1033<br>服务：1025：network blackjack 1033：[NULL]<br>说明：木马netspy开放这2个端口。</p><p>端口：1080<br>服务：SOCKS<br>说明：这一协议以通道方式穿过防火墙，允许防火墙后面的人通过一个IP地址访问INTERNET。理论上它应该只允许内部的通信向外到达INTERNET。但是由于错误的配置，它会允许位于防火墙外部的攻击穿过防火墙。WinGate常会发生这种错误，在加入IRC聊天室时常会看到这种情况。</p><p>端口：1170<br>服务：[NULL]<br>说明：木马Streaming Audio Trojan、Psyber Stream Server、Voice开放此端口。</p><p>端口：1234、1243、6711、6776<br>服务：[NULL]<br>说明：木马SubSeven2.0、Ultors Trojan开放1234、6776端口。木马SubSeven1.0/1.9开放1243、6711、6776端口。</p><p>端口：1245<br>服务：[NULL]<br>说明：木马Vodoo开放此端口。</p><p>端口：1433<br>服务：SQL<br>说明：Microsoft的SQL服务开放的端口。</p><p>端口：1492<br>服务：stone-design-1<br>说明：木马FTP99CMP开放此端口。</p><p>端口：1500<br>服务：RPC client fixed port session queries<br>说明：RPC客户固定端口会话查询</p><p>端口：1503<br>服务：NetMeeting T.120<br>说明：NetMeeting T.120</p><p>端口：1524<br>服务：ingress<br>说明：许多攻击脚本将安装一个后门SHELL于这个端口，尤其是针对SUN系统中Sendmail和RPC服务漏洞的脚本。如果刚安装了防火墙就看到在这个端口上的连接企图，很可能是上述原因。可以试试Telnet到用户的计算机上的这个端口，看看它是否会给你一个SHELL。连接到600/pcserver也存在这个问题。</p><p>端口：1600<br>服务：issd<br>说明：木马Shivka-Burka开放此端口。</p><p>端口：1720<br>服务：NetMeeting<br>说明：NetMeeting H.233 call Setup。</p><p>端口：1731<br>服务：NetMeeting Audio Call Control<br>说明：NetMeeting音频调用控制。</p><p>端口：1807<br>服务：[NULL]<br>说明：木马SpySender开放此端口。</p><p>端口：1981<br>服务：[NULL]<br>说明：木马ShockRave开放此端口。</p><p>端口：1999<br>服务：cisco identification port<br>说明：木马BackDoor开放此端口。</p><p>端口：2000<br>服务：[NULL]<br>说明：木马GirlFriend 1.3、Millenium 1.0开放此端口。</p><p>端口：2001<br>服务：[NULL]<br>说明：木马Millenium 1.0、Trojan Cow开放此端口。</p><p>端口：2023<br>服务：xinuexpansion 4<br>说明：木马Pass Ripper开放此端口。</p><p>端口：2049<br>服务：NFS<br>说明：NFS程序常运行于这个端口。通常需要访问Portmapper查询这个服务运行于哪个端口。</p><p>端口：2115<br>服务：[NULL]<br>说明：木马Bugs开放此端口。</p><p>端口：2140、3150<br>服务：[NULL]<br>说明：木马Deep Throat 1.0/3.0开放此端口。</p><p>端口：2500<br>服务：RPC client using a fixed port session replication<br>说明：应用固定端口会话复制的RPC客户</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;21/tcp FTP 文件传输协议&lt;br&gt;22/tcp SSH 安全登录、文件传送(SCP)和端口重定向&lt;br&gt;23/tcp Telnet 不安全的文本传送&lt;br&gt;25/tcp SMTP Simple Mail Transfer Protocol (E-mail)&lt;br&gt;6
      
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>天津之行</title>
    <link href="http://yoursite.com/2018/10/08/%E5%A4%A9%E6%B4%A5%E4%B9%8B%E8%A1%8C/"/>
    <id>http://yoursite.com/2018/10/08/天津之行/</id>
    <published>2018-10-07T17:25:31.000Z</published>
    <updated>2018-10-08T09:33:46.805Z</updated>
    
    <content type="html"><![CDATA[<p>2018年的十一假期过去了，明天又要开始上课了，不对，是今天。忙碌了一个暑假做了小app，终于提交了小作品，哈！终于有了一个小假期，安排一手，顶着人流高峰，出去转一转。<br>天津，怎么说，感觉那边的方言特别的有味道呢？对！就是说快板的味道，媒体在无形中给留下的影响还是蛮大的嘛。怎么说，在电视机旁看一场相声，真的不如来一场现场的来的有感觉！<br><img src="/images/天津01.jpg" alt="R" title="T"><br>还有嘛，就是躺在秋天的草坪上面，旁边放着音乐，体会时间的悠闲<br>哈！简单放两张图纪念一下。<br><img src="/images/天津04.jpg" alt="R" title="T"><br><img src="/images/天津02.jpg" alt="R" title="T"><br>传说中的天津之眼，架在桥上的摩天轮真的有些许艺术感。<br><img src="/images/天津之眼.jpg" alt="R" title="T"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年的十一假期过去了，明天又要开始上课了，不对，是今天。忙碌了一个暑假做了小app，终于提交了小作品，哈！终于有了一个小假期，安排一手，顶着人流高峰，出去转一转。&lt;br&gt;天津，怎么说，感觉那边的方言特别的有味道呢？对！就是说快板的味道，媒体在无形中给留下的影响还是蛮大
      
    
    </summary>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>next主题</title>
    <link href="http://yoursite.com/2018/05/11/%E4%B8%BB%E9%A2%98/"/>
    <id>http://yoursite.com/2018/05/11/主题/</id>
    <published>2018-05-11T14:42:36.000Z</published>
    <updated>2018-05-13T05:56:46.918Z</updated>
    
    <content type="html"><![CDATA[<p>  这两天比较了yilia和next主题，最后还是选择了自我感觉比较酷<br>next主题，从这中间也走了一些坑。<br>1.克隆下来的主题，从git上克隆下来了一个不是最新版本的就是比较伤的事情了，突然发现主题的语言变成了德文–？看到git日志才发现最新的git版本的url。<br>2.还有就是最初按照next官方文档配置的目录..发现官方文档也好久没有更新了，目录中的about、tags等都需要手动配置，拿about说一下，hexo new post”about”，然后在md里添加type: “about”，记得有空格啊。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  这两天比较了yilia和next主题，最后还是选择了自我感觉比较酷&lt;br&gt;next主题，从这中间也走了一些坑。&lt;br&gt;1.克隆下来的主题，从git上克隆下来了一个不是最新版本的就是比较伤的事情了，突然发现主题的语言变成了德文–？看到git日志才发现最新的git版本的ur
      
    
    </summary>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Git和Markdown的小用法</title>
    <link href="http://yoursite.com/2018/03/22/Git+Markdown/"/>
    <id>http://yoursite.com/2018/03/22/Git+Markdown/</id>
    <published>2018-03-22T15:24:01.000Z</published>
    <updated>2018-05-11T15:12:57.530Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简单的用于博客的指令："><a href="#简单的用于博客的指令：" class="headerlink" title="简单的用于博客的指令："></a>简单的用于博客的指令：</h3><p>hexo new post “the name of the file”<br>hexo g 部署<br>hexo s<br>hexo s –debug<br>hexo d<br>hexo d -g</p><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>1.标题设置：</p><p>#字符用于控制标题大小 （一级也就是一个#最大）<br>2.块注释：（blockquote）</p><blockquote><blockquote><p>通过在文字开头添加“&gt;”表示块注释</p></blockquote></blockquote><p>3.斜体： 将需要设置为斜体的文字两端使用1个星号 或者 “<em>“夹起来 <em>@zeroker</em><br>4.粗体：<br>将需要设置为斜体的文字两端使用2个”*”或者”</em>“夹起来  <strong>@zeroker</strong><br>5.链接：<br>内联方式：This is an [注释] (url).<br>6.图片：<br>! [alt text] [id]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简单的用于博客的指令：&quot;&gt;&lt;a href=&quot;#简单的用于博客的指令：&quot; class=&quot;headerlink&quot; title=&quot;简单的用于博客的指令：&quot;&gt;&lt;/a&gt;简单的用于博客的指令：&lt;/h3&gt;&lt;p&gt;hexo new post “the name of the fil
      
    
    </summary>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建教程</title>
    <link href="http://yoursite.com/2017/04/20/%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/04/20/教程/</id>
    <published>2017-04-20T12:53:32.000Z</published>
    <updated>2018-05-11T14:15:14.379Z</updated>
    
    <content type="html"><![CDATA[<p> exciting AND 因吹斯汀 。<br>点击-&gt;<a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">教程</a><br>点击-&gt;<a href="http://www.cnblogs.com/hnrainll/p/3514637.html" target="_blank" rel="external">markdow语法</a><br>点击-&gt;<a href="https://jingyan.baidu.com/article/a17d528533aa828099c8f273.html" target="_blank" rel="external">window10快捷键</a></p><p>Open the world–&gt;<a href="http://community.topcoder.com/tc" target="_blank" rel="external">topcoder</a><br>open the world–&gt;<a href="http://codeforces.com/" target="_blank" rel="external">codeforces</a></p><p><img src="/images/01.jpg" alt="R" title="T"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; exciting AND 因吹斯汀 。&lt;br&gt;点击-&amp;gt;&lt;a href=&quot;http://blog.csdn.net/gdutxiaoxu/article/details/53576018&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教程&lt;/a&gt;&lt;b
      
    
    </summary>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
